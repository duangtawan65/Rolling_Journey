# Generated by Django 5.2.6 on 2025-09-29 04:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Checkpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('heal_hp_full', models.BooleanField(default=True)),
                ('restore_mp_pct', models.PositiveIntegerField(default=50)),
                ('grant_potions', models.PositiveIntegerField(default=1)),
            ],
            options={
                'ordering': ['stage__index', 'turn'],
            },
        ),
        migrations.CreateModel(
            name='EventTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=64, unique=True)),
                ('title', models.CharField(max_length=120)),
                ('zone', models.CharField(blank=True, max_length=50)),
                ('kind', models.CharField(choices=[('NORMAL', 'Normal'), ('FORCED_MP', 'Forced MP'), ('BOSS', 'Boss'), ('TRAP', 'Trap'), ('NARR', 'Narrative')], default='NORMAL', max_length=12)),
                ('mp_cost', models.PositiveIntegerField(default=0)),
                ('requires_mp', models.BooleanField(default=False)),
                ('mp_bonus', models.IntegerField(default=0)),
                ('fallback', models.CharField(default='none', max_length=8)),
                ('template_text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('name', models.CharField(max_length=100)),
                ('zone', models.CharField(blank=True, max_length=50)),
                ('bg_intro_url', models.CharField(blank=True, max_length=255)),
                ('bg_battle_url', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anon_id', models.CharField(blank=True, max_length=64, unique=True)),
                ('hp', models.IntegerField(default=30)),
                ('mp', models.IntegerField(default=10)),
                ('pot_heal', models.IntegerField(default=1)),
                ('pot_boost', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_checkpoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='roll.checkpoint')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stage_index', models.PositiveIntegerField(db_index=True, default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('turn', models.PositiveIntegerField(db_index=True, default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DEAD', 'Dead'), ('ESCAPED', 'Escaped'), ('CLEARED', 'Cleared')], db_index=True, default='ACTIVE', max_length=10)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='roll.player')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('session_start', 'Session Start'), ('session_end', 'Session End'), ('clear_game', 'Clear Game'), ('stage_enter', 'Stage Enter'), ('stage_clear', 'Stage Clear'), ('turn_start', 'Turn Start'), ('turn_end', 'Turn End'), ('turn_tick', 'Turn Tick'), ('msg_user', 'Message (User)'), ('action_attempt', 'Action Attempt'), ('action_result', 'Action Result'), ('item_used', 'Item Used'), ('mana_event_offered', 'Mana Event Offered'), ('mana_event_accepted', 'Mana Event Accepted'), ('mana_event_declined', 'Mana Event Declined'), ('escape_attempt', 'Escape Attempt'), ('escape_result', 'Escape Result'), ('checkpoint', 'Checkpoint'), ('death', 'Death'), ('error', 'Error')], db_index=True, max_length=32)),
                ('stage_index', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('turn', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('potions', models.IntegerField()),
                ('pot_heal_ct', models.IntegerField(default=0)),
                ('pot_boost_ct', models.IntegerField(default=0)),
                ('attrs', models.JSONField(blank=True, default=dict)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='roll.player')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='roll.session')),
            ],
            options={
                'ordering': ['ts', 'id'],
            },
        ),
        migrations.AddField(
            model_name='checkpoint',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkpoints', to='roll.stage'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['player', 'status'], name='roll_sessio_player__8a3c54_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['player', 'stage_index', 'turn'], name='roll_sessio_player__f454ec_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['player', 'session', 'ts'], name='roll_eventl_player__da540a_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['type', 'ts'], name='roll_eventl_type_7ff5ac_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['stage_index', 'turn'], name='roll_eventl_stage_i_69e6b1_idx'),
        ),
        migrations.AddIndex(
            model_name='eventlog',
            index=models.Index(fields=['player', 'session', 'stage_index', 'turn', 'ts'], name='roll_eventl_player__f7b466_idx'),
        ),
        migrations.AddConstraint(
            model_name='checkpoint',
            constraint=models.UniqueConstraint(fields=('stage', 'turn'), name='uniq_checkpoint_stage_turn'),
        ),
        migrations.AddConstraint(
            model_name='checkpoint',
            constraint=models.CheckConstraint(condition=models.Q(('turn__in', [1, 5])), name='checkpoint_turn_in_1_or_5'),
        ),
    ]
